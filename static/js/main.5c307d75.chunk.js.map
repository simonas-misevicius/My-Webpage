{"version":3,"sources":["Home.js","ListAdd.js","ListRow.js","MyList.js","App.js","reportWebVitals.js","index.js"],"names":["Home","require","get","then","response","console","log","data","name","Container","Row","className","MyForm","addToList","f","useState","num","changeNum","changename","id","value","onChange","event","target","type","placeholder","onClick","ListRow","item","rowId","removeFromList","editList","number","useEffect","e","dataset","edit","MyList","values","setValues","seachText","setSearch","removeId","parseInt","remove","newValues","filter","element","index","EditList","i","slice","Col","lg","sort","first","second","localeCompare","map","startsWith","reduce","prev","curr","App","Nav","variant","Item","Link","eventKey","as","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c307d75.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nexport default function Home() {\r\n  const axios = require(\"axios\");\r\n  axios\r\n    .get(\"https://simonasrest.azurewebsites.net/api/Todo\")\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data[0].name);\r\n    });\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h2 className=\"text-center\">\r\n          Ongoing project to show my web programming skills.\r\n        </h2>\r\n      </Row>\r\n      <br />\r\n      <Row>\r\n        <h2 className=\"text-center \">\r\n          Click links at the top of the page to see different small programs.\r\n        </h2>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function MyForm({ addToList = (f) => f }) {\r\n  const sendValues = () => {\r\n    if (num != \"\" && name != \"\") {\r\n      addToList(num, name);\r\n    }\r\n  };\r\n  const [num, changeNum] = useState(\"\");\r\n  const [name, changename] = useState(\"\");\r\n  return (\r\n    <>\r\n      <input\r\n        id=\"numInput\"\r\n        value={num}\r\n        onChange={(event) => {\r\n          changeNum(event.target.value);\r\n        }}\r\n        type=\"number\"\r\n        placeholder=\"123\"\r\n      />\r\n      <input\r\n        id=\"textInput\"\r\n        value={name}\r\n        onChange={(event) => {\r\n          changename(event.target.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"abc\"\r\n      />\r\n      <button id=\"addButton\" onClick={sendValues}>\r\n        ADD\r\n      </button>\r\n      {num == \"\" || name == \"\" ? <p>Missing input</p> : null}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function ListRow({ item, rowId, removeFromList, editList }) {\r\n  //console.log(rowId);\r\n  const [num, changeNum] = useState(item.number);\r\n  const [name, changename] = useState(item.name);\r\n  useEffect(() => {\r\n    changeNum(item.number);\r\n    changename(item.name);\r\n  }, [item]);\r\n  const edit = (e) => {\r\n    if (num !== \"\" && name !== \"\") {\r\n      const id = e.target.dataset.edit;\r\n      editList(id, name, num);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        id=\"numEdit\"\r\n        value={num}\r\n        onChange={(event) => {\r\n          changeNum(event.target.value);\r\n        }}\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        id=\"textEdit\"\r\n        value={name}\r\n        onChange={(event) => {\r\n          changename(event.target.value);\r\n        }}\r\n        type=\"text\"\r\n      />\r\n      <button id=\"deleteButton\" data-remove={rowId} onClick={removeFromList}>\r\n        Delete\r\n      </button>\r\n      <button id=\"editButton\" data-edit={rowId} onClick={edit}>\r\n        Edit\r\n      </button>\r\n      {num === \"\" || name === \"\" ? <p>Missing input</p> : null}\r\n    </>\r\n  );\r\n}\r\n","import ListAdd from \"./ListAdd\";\r\nimport { useState } from \"react\";\r\nimport ListRow from \"./ListRow\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function MyList({ data }) {\r\n  const [values, setValues] = useState(data);\r\n  const [seachText, setSearch] = useState(\"\");\r\n\r\n  const addToList = (num, name) => {\r\n    const newValues = [...values, { name: name, number: num }];\r\n    setValues(newValues);\r\n  };\r\n  const removeFromList = (e) => {\r\n    const removeId = parseInt(e.target.dataset.remove);\r\n    const newValues = values.filter((element, index) => {\r\n      return index !== removeId;\r\n    });\r\n    setValues(newValues);\r\n  };\r\n  const EditList = (i, name, num) => {\r\n    const index = parseInt(i);\r\n    const newValues = [\r\n      ...values.slice(0, i),\r\n      { name: name, number: num },\r\n      ...values.slice(index + 1),\r\n    ];\r\n    setValues(newValues);\r\n  };\r\n  const SortByName = () => {\r\n    const newValues = values.slice(0).sort((first, second) => {\r\n      return first.name.localeCompare(second.name);\r\n    });\r\n    setValues(newValues);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          Search\r\n          <input\r\n            id=\"filter\"\r\n            value={seachText}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            type=\"text\"\r\n          />\r\n        </Col>\r\n        <Col lg={6}>\r\n          <ListAdd addToList={addToList} />\r\n        </Col>\r\n        <Col>\r\n          <button id=\"sort\" onClick={SortByName}>\r\n            Sort by name\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <div /*class=\"d-flex justify-content-center\"*/>\r\n        <ul>\r\n          {values.map((item, i) => {\r\n            if (seachText === \"\" || item.name.startsWith(seachText)) {\r\n              return (\r\n                <li key={i}>\r\n                  <ListRow\r\n                    item={item}\r\n                    rowId={i}\r\n                    removeFromList={removeFromList}\r\n                    editList={EditList}\r\n                  />\r\n                </li>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <br />{\" \"}\r\n      <h4 id=\"sum\">\r\n        Sum is {values.reduce((prev, curr) => prev + parseInt(curr.number), 0)}\r\n      </h4>\r\n    </Container>\r\n  );\r\n}\r\n","import { Route, Switch, Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport MyList from \"./MyList\";\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  const dataForList = [\r\n    { name: \"abc\", number: 123 },\r\n    { name: \"def\", number: 235 },\r\n  ];\r\n  return (\r\n    <>\r\n      <Nav variant=\"pills\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-2\" as={Link} to=\"/mylist\">\r\n            List example\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <br />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/mylist\">\r\n          <MyList data={dataForList} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}