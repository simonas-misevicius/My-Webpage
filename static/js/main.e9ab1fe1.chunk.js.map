{"version":3,"sources":["Home.js","ListAdd.js","ListRow.js","MyList.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","Row","class","React","Component","MyForm","addToList","f","useState","num","changeNum","name","changename","id","value","onChange","event","target","type","placeholder","onClick","ListRow","item","rowId","removeFromList","editList","number","useEffect","e","dataset","edit","MyList","data","values","setValues","seachText","setSearch","removeId","parseInt","remove","newValues","filter","element","index","EditList","i","slice","Col","lg","sort","first","second","localeCompare","map","startsWith","reduce","prev","curr","App","Nav","variant","Item","Link","eventKey","as","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9ab1fe1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <h2 class=\"text-center\">\n            Ongoing project to show my web programming skills.\n          </h2>\n        </Row>\n        <br />\n        <Row>\n          <h2 class=\"text-center \">\n            Click links at the top of the page to see different small programs.\n          </h2>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import { useState } from \"react\";\r\n\r\nexport default function MyForm({ addToList = (f) => f }) {\r\n  const sendValues = () => {\r\n    if (num != \"\" && name != \"\") {\r\n      addToList(num, name);\r\n    }\r\n  };\r\n  const [num, changeNum] = useState(\"\");\r\n  const [name, changename] = useState(\"\");\r\n  return (\r\n    <>\r\n      <input\r\n        id=\"numInput\"\r\n        value={num}\r\n        onChange={(event) => {\r\n          changeNum(event.target.value);\r\n        }}\r\n        type=\"number\"\r\n        placeholder=\"123\"\r\n      />\r\n      <input\r\n        id=\"textInput\"\r\n        value={name}\r\n        onChange={(event) => {\r\n          changename(event.target.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"abc\"\r\n      />\r\n      <button id=\"addButton\" onClick={sendValues}>\r\n        ADD\r\n      </button>\r\n      {num == \"\" || name == \"\" ? <p>Missing input</p> : null}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function ListRow({ item, rowId, removeFromList, editList }) {\r\n  //console.log(rowId);\r\n  const [num, changeNum] = useState(item.number);\r\n  const [name, changename] = useState(item.name);\r\n  useEffect(() => {\r\n    changeNum(item.number);\r\n    changename(item.name);\r\n  }, [item]);\r\n  const edit = (e) => {\r\n    if (num !== \"\" && name !== \"\") {\r\n      const id = e.target.dataset.edit;\r\n      editList(id, name, num);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        id=\"numEdit\"\r\n        value={num}\r\n        onChange={(event) => {\r\n          changeNum(event.target.value);\r\n        }}\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        id=\"textEdit\"\r\n        value={name}\r\n        onChange={(event) => {\r\n          changename(event.target.value);\r\n        }}\r\n        type=\"text\"\r\n      />\r\n      <button id=\"deleteButton\" data-remove={rowId} onClick={removeFromList}>\r\n        Delete\r\n      </button>\r\n      <button id=\"editButton\" data-edit={rowId} onClick={edit}>\r\n        Edit\r\n      </button>\r\n      {num === \"\" || name === \"\" ? <p>Missing input</p> : null}\r\n    </>\r\n  );\r\n}\r\n","import ListAdd from \"./ListAdd\";\r\nimport { useState } from \"react\";\r\nimport ListRow from \"./ListRow\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function MyList({ data }) {\r\n  const [values, setValues] = useState(data);\r\n  const [seachText, setSearch] = useState(\"\");\r\n\r\n  const addToList = (num, name) => {\r\n    const newValues = [...values, { name: name, number: num }];\r\n    setValues(newValues);\r\n  };\r\n  const removeFromList = (e) => {\r\n    const removeId = parseInt(e.target.dataset.remove);\r\n    const newValues = values.filter((element, index) => {\r\n      return index !== removeId;\r\n    });\r\n    setValues(newValues);\r\n  };\r\n  const EditList = (i, name, num) => {\r\n    const index = parseInt(i);\r\n    const newValues = [\r\n      ...values.slice(0, i),\r\n      { name: name, number: num },\r\n      ...values.slice(index + 1),\r\n    ];\r\n    setValues(newValues);\r\n  };\r\n  const SortByName = () => {\r\n    const newValues = values.slice(0).sort((first, second) => {\r\n      return first.name.localeCompare(second.name);\r\n    });\r\n    setValues(newValues);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          Search\r\n          <input\r\n            id=\"filter\"\r\n            value={seachText}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            type=\"text\"\r\n          />\r\n        </Col>\r\n        <Col lg={6}>\r\n          <ListAdd addToList={addToList} />\r\n        </Col>\r\n        <Col>\r\n          <button id=\"sort\" onClick={SortByName}>\r\n            Sort by name\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <div /*class=\"d-flex justify-content-center\"*/>\r\n        <ul>\r\n          {values.map((item, i) => {\r\n            if (seachText === \"\" || item.name.startsWith(seachText)) {\r\n              return (\r\n                <li key={i}>\r\n                  <ListRow\r\n                    item={item}\r\n                    rowId={i}\r\n                    removeFromList={removeFromList}\r\n                    editList={EditList}\r\n                  />\r\n                </li>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <br />{\" \"}\r\n      <h4 id=\"sum\">\r\n        Sum is {values.reduce((prev, curr) => prev + parseInt(curr.number), 0)}\r\n      </h4>\r\n    </Container>\r\n  );\r\n}\r\n","import { Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport MyList from \"./MyList\";\nimport { Nav } from \"react-bootstrap\";\n\nfunction App() {\n  const dataForList = [\n    { name: \"abc\", number: 123 },\n    { name: \"def\", number: 235 },\n  ];\n  return (\n    <>\n      <Nav variant=\"pills\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-1\" as={Link} to=\"/\">\n            Home\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-2\" as={Link} to=\"/mylist\">\n            List example\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <br />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/mylist\">\n          <MyList data={dataForList} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}